---
const { post } = Astro.props;
const formattedDate = formatDate(new Date(post.frontmatter.pubDate));
const formattedUpdatedDate = post.frontmatter.updated
  ? formatDate(new Date(post.frontmatter.updated))
  : post.frontmatter.updated;

function formatDate(date) {
  return Intl.DateTimeFormat('en-US', {
    month: 'long',
    year: 'numeric',
    day: 'numeric',
  }).format(new Date(date));
}
---
<article>
    <a href={post.url}>
        <h3>{post.frontmatter.title}</h3>
    </a>
    <p class="formatted-date">
        {formattedDate}
        {formattedUpdatedDate && <span class="formatted-date"> (Updated: {formattedUpdatedDate})</span>}
    </p>
    <p class="description">{post.frontmatter.description}</p>
</article>

<style>
a {
    text-decoration: none;
    color: var(--linkColor);
}

h3 {
    margin-bottom: 0.5em;
    font-family: 'Merriweather','Georgia',serif;
    font-size: 1.5rem;
}

p {
    padding-top: 0em;
    margin-top: 0.25em;
    margin-bottom: 0em;
}

article {
    margin-bottom: 4em;
}

.formatted-date {
    font-size: 0.9em;
}

.description {
    font-size: var(--standardFontSize);
}
</style>